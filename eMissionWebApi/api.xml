<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EMission.Api</name>
    </assembly>
    <members>
        <member name="T:EMission.Api.Controllers.ElectricityController">
            <summary>
            Controller for requesting electricity estimates.
            </summary>
        </member>
        <member name="M:EMission.Api.Controllers.ElectricityController.#ctor(EMission.Application.Interfaces.ServiceInterfaces.IElectricityService)">
            <summary>
            Creates an instance of <see cref="T:EMission.Api.Controllers.ElectricityController"/>
            </summary>
            <param name="electricityService"></param>
        </member>
        <member name="M:EMission.Api.Controllers.ElectricityController.GetCarbonEmissionEstimate(EMission.Api.Models.DTOs.ElectricityEstimateRequestDto)">
            <summary>
            Requests a new carbon emissions estimate using a given electricity consumption.
            </summary>
            <param name="requestDto">An <see cref="T:EMission.Api.Models.DTOs.ElectricityEstimateRequestDto"/>.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/> with a result of type <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:EMission.Api.Extensions.WebApplicationBuilderExtensions.ConfigureServices(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Adds all required services to the <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/>.
            </summary>
            <param name="builder">The instance of <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/> with added services.</returns>
        </member>
        <member name="M:EMission.Api.Extensions.WebApplicationBuilderExtensions.AddExternalApiClients(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Adds all necessary HttpClients to the IoC container for the application's external API calls.
            </summary>
            <exception cref="T:System.ApplicationException">Thrown if the <c>CarbonInterfaceApiBaseUri</c> is not present in <c>applicationsettings.json</c>.</exception>
        </member>
        <member name="T:EMission.Api.Models.DTOs.ElectricityEstimateRequestDto">
            <summary>
            A DTO representing a received request for an electricity carbon emissions estimate.
            </summary>
        </member>
        <member name="P:EMission.Api.Models.DTOs.ElectricityEstimateRequestDto.ElectricalUnits">
            <summary>
            A string representing the <see cref="T:EMission.Domain.Enums.ElectricalUnit"/> <c>enum</c>.
            </summary>
        </member>
        <member name="P:EMission.Api.Models.DTOs.ElectricityEstimateRequestDto.ElectricityValue">
            <summary>
            A <c>double</c> representing the number of <see cref="P:EMission.Api.Models.DTOs.ElectricityEstimateRequestDto.ElectricalUnits"/> used.
            </summary>
        </member>
        <member name="P:EMission.Api.Models.DTOs.ElectricityEstimateRequestDto.CountryCode">
            <summary>
            A two-letter ISO country code representing the country that the request is pertinent to.
            </summary>
        </member>
        <member name="T:EMission.Api.Models.DTOs.ElectricityEstimateRequestDtoExtensions">
            <summary>
            Extension class for <see cref="T:EMission.Api.Models.DTOs.ElectricityEstimateRequestDto" />.
            </summary>
        </member>
        <member name="M:EMission.Api.Models.DTOs.ElectricityEstimateRequestDtoExtensions.ToElectricityEstimateRequest(EMission.Api.Models.DTOs.ElectricityEstimateRequestDto)">
            <summary>
            Transforms an <see cref="T:EMission.Api.Models.DTOs.ElectricityEstimateRequestDto" /> into an <see cref="T:EMission.Application.Models.ElectricityEstimateRequest"/> for consumption by the application layer.
            </summary>
            <param name="requestDto">The <see cref="T:EMission.Api.Models.DTOs.ElectricityEstimateRequestDto" /> to be transformed.</param>
            <returns>The generated <see cref="T:EMission.Application.Models.ElectricityEstimateRequest"/>.</returns>
        </member>
        <member name="T:EMission.Api.Models.DTOs.ElectricityEstimateResponseDto">
            <summary>
            A DTO representing a response to a request for an electricity carbon emissions estimate.
            </summary>
        </member>
        <member name="P:EMission.Api.Models.DTOs.ElectricityEstimateResponseDto.ElectricalUnits">
            <summary>
            A string representing the <see cref="T:EMission.Domain.Enums.ElectricalUnit"/> enum.
            </summary>
        </member>
        <member name="P:EMission.Api.Models.DTOs.ElectricityEstimateResponseDto.ElectricityValue">
            <summary>
            A <c>double</c> representing the number of <see cref="P:EMission.Api.Models.DTOs.ElectricityEstimateResponseDto.ElectricalUnits"/> used.
            </summary>
        </member>
        <member name="P:EMission.Api.Models.DTOs.ElectricityEstimateResponseDto.CountryCode">
            <summary>
            A two-letter ISO country code representing the country that the request is pertinent to.
            </summary>
        </member>
        <member name="P:EMission.Api.Models.DTOs.ElectricityEstimateResponseDto.EstimatedAt">
            <summary>
            The <see cref="T:System.DateTime"/> the request was processed at.
            </summary>
        </member>
        <member name="P:EMission.Api.Models.DTOs.ElectricityEstimateResponseDto.CarbonEmissionsGrams">
            <summary>
            An <c>int</c> representing the estimated Carbon emissions in grams (g).
            </summary>
        </member>
        <member name="T:EMission.Api.Models.DTOs.ElectricityEstimateResponseExtensions">
            <summary>
            Extension class for <see cref="T:EMission.Application.Models.ElectricityEstimateResponse" />.
            </summary>
        </member>
        <member name="M:EMission.Api.Models.DTOs.ElectricityEstimateResponseExtensions.ToElectricityEstimateResponseDto(EMission.Application.Models.ElectricityEstimateResponse)">
            <summary>
            Transforms an <see cref="T:EMission.Application.Models.ElectricityEstimateResponse" /> from the application layer into an <see cref="T:EMission.Api.Models.DTOs.ElectricityEstimateResponseDto"/> for Web API use.
            </summary>
            <param name="response">The <see cref="T:EMission.Application.Models.ElectricityEstimateResponse" /> to be transformed.</param>
            <returns>The generated <see cref="T:EMission.Api.Models.DTOs.ElectricityEstimateResponseDto"/>.</returns>
        </member>
        <member name="T:EMission.Api.Models.Validators.CountryCodeValidatorAttribute">
            <summary>
            Specifies that a field cannot be <c>null</c> or empty <c>string</c>, contains exactly 2 alphabetic characters, 
            and exists within the list of ISO country codes from <c>IsoCountryCodes.json</c>.
            </summary>
            <exception cref="T:System.ApplicationException">Thrown on application start up if the ISO country codes file could not be found or read.</exception>
        </member>
        <member name="M:EMission.Api.Models.Validators.CountryCodeValidatorAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc/>
        </member>
        <member name="T:EMission.Api.Models.Validators.EnumValidatorAttribute">
            <summary>
            Specifies that a field is required and exists as a value in the given enum.
            </summary>
            <exception cref="T:System.ArgumentException">Thrown if the provided object is not an enum.</exception>
        </member>
        <member name="M:EMission.Api.Models.Validators.EnumValidatorAttribute.#ctor(System.Type)">
            <summary>
            Creates a new instance of the <see cref="T:EMission.Api.Models.Validators.EnumValidatorAttribute"/> class.
            </summary>
            <param name="enumType">The type of enum expected.</param>
            <exception cref="T:System.ArgumentException">Thrown if the object provided is not an enum.</exception>
        </member>
        <member name="M:EMission.Api.Models.Validators.EnumValidatorAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc/>
        </member>
        <member name="T:EMission.Api.Models.Validators.GreaterThanZeroValidatorAttribute">
            <summary>
            Validates that the value of the Property decorated with this attribute is not a <c>null</c> or empty <c>string</c>,
            contains exactly 2 alphabetic characters, and exists within the list of ISO country codes from <c>IsoCountryCodes.json</c>.
            </summary>
            <exception cref="T:System.ApplicationException">Thrown on application start up if the ISO country codes file could not be found or read.</exception>
        </member>
        <member name="M:EMission.Api.Models.Validators.GreaterThanZeroValidatorAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc/>
        </member>
        <member name="T:EMission.Api.Models.Validators.RequiredValidatorAttribute">
            <summary>
            Specifies that a field is required.
            </summary>
        </member>
        <member name="M:EMission.Api.Models.Validators.RequiredValidatorAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc/>
        </member>
    </members>
</doc>
